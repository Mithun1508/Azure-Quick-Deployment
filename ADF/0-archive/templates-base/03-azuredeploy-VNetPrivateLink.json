{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    // subscriptionId
    "subscriptionId": "[subscription().subscriptionId]",
    // rgName
    "resourceGroupName": "[resourceGroup().name]",
    // Global  BRWDev101
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",

    // Network
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
    // "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",

 
    "copy": [
      {
        "name": "privateLink",
        "count": "[length(variables('PrivateLinkInfo'))]",
        "input": {
          "name": "[concat(Variables('Deployment'),'-pl',variables('PrivateLinkInfo')[copyIndex('privateLink')].Subnet)]",
          "vNet": "[concat(variables('Deployment'),'-vn')]"
        }
      }
    ],
    "PrivateLinkInfo": "[parameters('DeploymentInfo').PrivateLinkInfo]"
    // "PrivateLinkInfo": [
    //   {
    //     "Subnet": "snFE01",
    //     "StaticIP": "36",
    //     "ServiceConnections": [
    //       {
    //         "resourceName": "kvVault01",
    //         "provider": "Microsoft.KeyVault/vaults",
    //         "groupIDs": ["vault"]
    //       }
    //     ]
    //   }
    // ]
  },
  "resources": [
    // {
    //   "condition": false,
    //   "name": "[concat(Variables('Deployment'),'-pl-nic-',variables('PrivateLinkInfo')[copyIndex(0)].Subnet)]",
    //   "type": "Microsoft.Network/networkInterfaces",
    //   "apiVersion": "2019-11-01",
    //   "location": "[resourceGroup().location]",
    //   "dependsOn": [
    //   ],
    //   "copy": {
    //     "name": "privateLinkLoop",
    //     "count": "[length(variables('PrivateLinkInfo'))]"
    //   },
    //   "properties": {
    //     "ipConfigurations": [
    //       {
    //         "name": "vault-default.privateEndpoint",
    //         "properties": {
    //           "privateIPAddress": "[concat(variables('networkId'),'.',variables('PrivateLinkInfo')[copyIndex(0)].StaticIP)]",
    //           "privateIPAllocationMethod": "Static",
    //           "subnet": {
    //             "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('privateLink')[copyIndex(0)].vNet, variables('PrivateLinkInfo')[copyIndex(0)].Subnet)]"
    //           },
    //           "primary": true,
    //           "privateIPAddressVersion": "IPv4"
    //         }
    //       }
    //     ],
    //     "dnsSettings": {
    //       "dnsServers": [
    //       ]
    //     },
    //     "enableAcceleratedNetworking": false,
    //     "enableIPForwarding": false
    //   }
    // },
    {
      // "condition": "[equals(parameters('Stage').PrivateLink,1)]",
      "name": "[concat(Variables('Deployment'),'-pl-',variables('PrivateLinkInfo')[copyIndex(0)].Subnet,'-',variables('PrivateLinkInfo')[copyIndex(0)].Name)]",
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2019-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        // "[concat(Variables('Deployment'),'-pl-nic-',variables('PrivateLinkInfo')[copyIndex(0)].Subnet)]"
      ],
      "copy": {
        "name": "privateLinkLoop",
        "count": "[length(variables('PrivateLinkInfo'))]"
      },
      "properties": {
        "copy": [
          {
            "name": "privateLinkServiceConnections",
            "count": "[length(variables('PrivateLinkInfo')[copyIndex(0)].ServiceConnections)]",
            "input": {
              "name": "[concat(Variables('Deployment'),'-pl-',variables('PrivateLinkInfo')[copyIndex(0)].Subnet,'-',variables('PrivateLinkInfo')[copyIndex(0)].ServiceConnections[copyIndex('privateLinkServiceConnections')].resourceName)]",
              "properties": {
                "privateLinkServiceId": "[resourceId(variables('PrivateLinkInfo')[copyIndex(0)].ServiceConnections[copyIndex('privateLinkServiceConnections')].provider,concat(variables('Deployment'),'-',variables('PrivateLinkInfo')[copyIndex(0)].ServiceConnections[copyIndex('privateLinkServiceConnections')].resourceName))]",
                "groupIds": "[variables('PrivateLinkInfo')[copyIndex(0)].ServiceConnections[copyIndex('privateLinkServiceConnections')].groupIDs]",
                "privateLinkServiceConnectionState": {
                  "status": "Approved",
                  "actionsRequired": "None"
                }
              }
            }
          }
        ],
        "manualPrivateLinkServiceConnections": [
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('privateLink')[copyIndex(0)].vNet, variables('PrivateLinkInfo')[copyIndex(0)].Subnet)]"
        }
        // "networkInterfaces": [
        //   {
        //     "id": "[resourceid('Microsoft.Network/networkInterfaces',concat(Variables('Deployment'),'-pl-nic-',variables('PrivateLinkInfo')[copyIndex(0)].Subnet))]"
        //   }
        // ]

      }
    }
  ],
  "outputs": {
    "VnetID": {
      "value": "[variables('networkId')]",
      "type": "string"
    }
  }
}
