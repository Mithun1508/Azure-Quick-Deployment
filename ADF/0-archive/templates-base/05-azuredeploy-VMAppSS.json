{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Prefix": {
            "type": "string",
            "defaultValue": "AZE2",
            "allowedValues": [
                "AZE2",
                "AZC1",
                "AEU2",
                "ACU1"
            ]
        },
        "Environment": {
            "type": "string",
            "defaultValue": "D",
            "allowedValues": [
                "I",
                "D",
                "U",
                "P",
                "S",
                "G",
                "A"
            ]
        },
        "DeploymentID": {
            "type": "string",
            "defaultValue": "1",
            "allowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9"
            ]
        },
        "Stage": {
            "type": "object"
        },
        "Extensions": {
            "type": "object"
        },
        "Global": {
            "type": "object"
        },
        "DeploymentInfo": {
            "type": "object"
        },

        "deploymentTime": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "vmAdminPassword": {
            "type": "securestring"
        },
        "devOpsPat": {
            "type": "securestring"
        },
        "sshPublic": {
            "type": "securestring"
        }
    },
    "variables": {
        "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
        "RGName": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').AppName,'-RG-',parameters('Environment'),parameters('DeploymentID') )]",
        "OSType": "[json(parameters('Global').OSType)]",
        "WadCfg": "[json(parameters('Global').WadCfg)]",
        "ladCfg": "[json(parameters('Global').ladCfg)]",
        "DataDiskInfo": "[json(parameters('Global').DataDiskInfo)]",
        "computeSizeLookupOptions": "[json(parameters('Global').computeSizeLookupOptions)]",

        "VMSizeLookup": {
            "D": "D",
            "I": "D",
            "U": "P",
            "P": "P",
            "S": "S"
        },
        "DeploymentName": "[deployment().name]",
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "storageAccountType": "[if(equals(parameters('Environment'),'P'), 'Premium_LRS', 'Standard_LRS')]",
        "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
        "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",
        "VNetID": "[resourceId(variables('subscriptionId'),variables('ResourceGroupName'), 'Microsoft.Network/VirtualNetworks', concat(Variables('Deployment'),'-vn'))]",
        "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
        "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
        "AppInsightsName": "[replace(concat(variables('Deployment'),'AppInsights'),'-','')]",
        "AppInsightsID": "[resourceid('Microsoft.insights/components/',variables('AppInsightsName'))]",
        "SADiagName": "[toLower(concat(replace(variables('Deployment'),'-',''),'sadiag'))]",
        "SAAppDataName": "[toLower(concat(replace(variables('Deployment'),'-',''),'sadata'))]",
        "saaccountiddiag": "[resourceid('Microsoft.Storage/storageAccounts/',variables('SADiagName'))]",
        "saaccountidglobalsource": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',parameters('Global').HubRGName,'/providers/Microsoft.Storage/storageAccounts/', parameters('Global').SAName)]",
        "Domain": "[split(parameters('Global').DomainName,'.')[0]]",
        "DSCConfigLookup": {
            "AppServers": "AppServers",
            "InitialDOP": "AppServers",
            "WVDServers": "AppServers",
            "VMAppSS": "AppServers"
        },
        "AppServers": "[if(contains(parameters('DeploymentInfo'),'AppServersVMSS'),parameters('DeploymentInfo').AppServersVMSS,createArray())]",
        "copy": [
            {
                "name": "VMSS",
                "count": "[length(variables('AppServers'))]",
                "input": {
                    "match": "[or(
                        equals(parameters('Global').CN,'.'),
                        contains(parameters('Global').CN,parameters('DeploymentInfo').AppServersVMSS[copyIndex('VMSS')].Name)
                        )]"
                }
            },
            {
                "name": "VM",
                "count": "[length(parameters('DeploymentInfo').AppServersVMSS)]",
                "input": {
                    "name": "[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].Name]",
                    "Extensions": "[if(contains(variables('OSType')[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].OSType],'RoleExtensions'),union(parameters('Extensions'),variables('OSType')[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].OSType].RoleExtensions),parameters('Extensions'))]",
                    "DataDisk": "[if(contains(parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')],'DDRole'), variables('DataDiskInfo')[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].DDRole],json('null'))]",
                    "NodeType": "[toLower(concat(parameters('Global').AppName,parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].Name))]",
                    "vmHostName": "[toLower(concat(parameters('Environment'),parameters('DeploymentID'),parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].Name))]",
                    "Name": "[concat(parameters('Prefix'),parameters('Global').AppName,'-',parameters('Environment'),parameters('DeploymentID'),'-',parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].Name)]",
                    "Primary": "[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].IsPrimary]",
                    "durabilityLevel": "[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].durabilityLevel]",
                    "placementProperties": "[parameters('DeploymentInfo').AppServersVMSS[copyIndex('VM')].placementProperties]"
                }
            }

        ],
        "azureActiveDirectory": {
            "clientApplication": "[parameters('Global').clientApplication]",
            "clusterApplication": "[parameters('Global').clusterApplication]",
            "tenantId": "[subscription().tenantId]"
        },
        "secrets": [
            {
                "sourceVault": {
                    "id": "[resourceId(parameters('Global').HubRGName, 'Microsoft.KeyVault/vaults', parameters('Global').KVName)]"
                },
                "vaultCertificates": [
                    {
                        "certificateUrl": "[parameters('Global').certificateUrl]",
                        "certificateStore": "My"
                    },
                    {
                        "certificateUrl": "[parameters('Global').certificateUrl]",
                        "certificateStore": "Root"
                    },
                    {
                        "certificateUrl": "[parameters('Global').certificateUrl]",
                        "certificateStore": "CA"
                    }
                ]
            }
        ],
        "userAssignedIdentities": {
            "Cluster": {
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet'))]": {
                },
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiStorageAccountOperator'))]": {
                },
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiStorageAccountOperatorGlobal'))]": {
                },
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiStorageAccountFileContributor'))]": {
                }
            },
            "Default": {
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet'))]": {
                },
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiStorageAccountOperatorGlobal'))]": {
                },
                "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiStorageAccountFileContributor'))]": {
                }
            }
        }
    },
    "resources": [
        {
            "condition": "[variables('VMSS')[copyIndex(0)].match]",
            "name": "[concat('dp', variables('Deployment'),'-diskLookup', variables('AppServers')[copyIndex(0)].Name)]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-01-01",
            "copy": {
                "name": "vmdiskLoop",
                "count": "[length( variables('AppServers') )]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/disks.json', parameters('global')._artifactsLocationSasToken)]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Deployment": {
                        "value": "[variables('Deployment')]"
                    },
                    "DeploymentID": {
                        "value": "[parameters('DeploymentID')]"
                    },
                    "Name": {
                        "value": "[variables('AppServers')[copyIndex(0)].Name]"
                    },
                    "DATASS": {
                        "value": "[if(contains(variables('DataDiskInfo')[variables('AppServers')[copyIndex(0)].DDRole],'DATASS'),variables('DataDiskInfo')[variables('AppServers')[copyIndex(0)].DDRole].DATASS,json('{\"1\":1}'))]"
                    },
                    "Global": {
                        "value": "[parameters('Global')]"
                    }
                }
            }
        },
        {
            "condition": "[variables('VMSS')[copyIndex(0)].match]",
            "name": "[concat('dp', variables('Deployment'),'-VMSSDeploy',if(equals(length(variables('AppServers')),0),'',variables('AppServers')[copyIndex(0)].Name))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-01-01",
            "dependsOn": [
                "vmdiskLoop"
            ],
            "copy": {
                "name": "VMSSLoop",
                "count": "[length( variables('AppServers') )]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/VMAppSS.json', parameters('global')._artifactsLocationSasToken)]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Deployment": {
                        "value": "[variables('Deployment')]"
                    },
                    "Prefix": {
                        "value": "[parameters('Prefix')]"
                    },
                    "DeploymentID": {
                        "value": "[parameters('DeploymentID')]"
                    },
                    "Environment": {
                        "value": "[parameters('Environment')]"
                    },
                    "AppServer": {
                        "value": "[variables('AppServers')[copyIndex(0)]]"
                    },
                    "VM": {
                        "value": "[variables('VM')[copyIndex(0)]]"
                    },
                    "Global": {
                        "value": "[parameters('Global')]"
                    },
                    "Stage": {
                        "value": "[parameters('Stage')]"
                    },
                    "OMSworkspaceID": {
                        "value": "[variables('OMSworkspaceID')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "devOpsPat": {
                        "value": "[parameters('devOpsPat')]"
                    },
                    "sshPublic": {
                        "value": "[parameters('sshPublic')]"
                    }
                }
            }
        }
    ]
}
