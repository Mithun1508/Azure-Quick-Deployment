{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    // Global  BRWDev101
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    // subscriptionId
    "subscriptionId": "[subscription().subscriptionId]",
    // rgName
    "resourceGroupName": "[resourceGroup().name]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat(variables('Deployment'),'-vn'))]",
    "snWAF01Name": "snWAF01",
    "SubnetRefGW": "[concat(variables('VNetID'), '/subnets/', variables('snWAF01Name'))]",
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],int(parameters('DeploymentID')))))]",
    //"WAFInfo": "[parameters('DeploymentInfo').WAFInfo]",
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "WAFPolicyInfo": "[if(contains(parameters('DeploymentInfo'),'WAFPolicyInfo'),parameters('DeploymentInfo').WAFPolicyInfo,variables('WAFPolicyDefault'))]",
    "WAFPolicyDefault": [
      {
        "name": "API",
        "state": "enabled",
        "mode": "Prevention",
        "ruleSetVersion": "3.0",
        "customRules": [
        ],
        "exclusions": [
        ],
        "ruleGroupOverrides": [
        ]
      },
      {
        "name": "API2",
        "state": "enabled",
        "mode": "Prevention",
        "ruleSetVersion": "3.0",
        "customRules": [
        ],
        "exclusions": [
        ],
        "ruleGroupOverrides": [
        ]
      }
    ],
    "WAFPolicyDefaultNTE": [
      {
        "name": "fe2",
        "state": "enabled",
        "mode": "Prevention",
        "ruleSetVersion": "3.0",
        "customRules": [
          {
            "name": "BypassOpenOrder",
            "priority": 100,
            "ruleType": "MatchRule",
            "action": "Allow",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestUri"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "/jakarta/isapi_redirect.dll"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          },
          {
            "name": "BlockCFIDE",
            "priority": 99,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestUri"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "/cfide/"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          }
        ],
        "exclusions": [
        ]
      },
      {
        "name": "MYORDERS2",
        "state": "enabled",
        "mode": "Prevention",
        "ruleSetVersion": "3.0",
        "customRules": [
          {
            "name": "BypassOpenOrder",
            "priority": 100,
            "ruleType": "MatchRule",
            "action": "Allow",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestUri"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "/jakarta/isapi_redirect.dll"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          },
          {
            "name": "BlockCFIDE",
            "priority": 99,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestUri"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "/cfide/"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          }
        ],
        "exclusions": [
        ]
      },
      {
        "name": "XML2",
        "state": "enabled",
        "mode": "Prevention",
        "ruleSetVersion": "3.0",
        "customRules": [
          {
            "name": "BlockCFIDE",
            "priority": 99,
            "ruleType": "MatchRule",
            "action": "Block",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestUri"
                  }
                ],
                "operator": "Contains",
                "negationConditon": false,
                "matchValues": [
                  "/cfide/"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          }
        ],
        "exclusions": [
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "bulkData"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "inputText"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "topsheetnotes"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "phrasetextonly"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "rtfText"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "comment"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "message"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "requiresattention"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "usernotes"
          },
          {
            "matchVariable": "RequestArgNames",
            "selectorMatchOperator": "Equals",
            "selector": "pianoroll"
          }
        ]
      }
    ],
    "ruleGroupOverrides": [
      {
        "ruleGroupName": "REQUEST-913-SCANNER-DETECTION",
        "rules": [
          {
            "ruleId": "913101",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-920-PROTOCOL-ENFORCEMENT",
        "rules": [
          {
            "ruleId": "920230",
            "state": "Disabled"
          },
          {
            "ruleId": "920300",
            "state": "Disabled"
          },
          {
            "ruleId": "920320",
            "state": "Disabled"
          },
          {
            "ruleId": "920350",
            "state": "Disabled"
          },
          {
            "ruleId": "920420",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
        "rules": [
          {
            "ruleId": "930100",
            "state": "Disabled"
          },
          {
            "ruleId": "930110",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-931-APPLICATION-ATTACK-RFI",
        "rules": [
          {
            "ruleId": "931130",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-932-APPLICATION-ATTACK-RCE",
        "rules": [
          {
            "ruleId": "932100",
            "state": "Disabled"
          },
          {
            "ruleId": "932105",
            "state": "Disabled"
          },
          {
            "ruleId": "932130",
            "state": "Disabled"
          },
          {
            "ruleId": "932110",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-942-APPLICATION-ATTACK-SQLI",
        "rules": [
          {
            "ruleId": "942110",
            "state": "Disabled"
          },
          {
            "ruleId": "942120",
            "state": "Disabled"
          },
          {
            "ruleId": "942130",
            "state": "Disabled"
          },
          {
            "ruleId": "942150",
            "state": "Disabled"
          },
          {
            "ruleId": "942180",
            "state": "Disabled"
          },
          {
            "ruleId": "942190",
            "state": "Disabled"
          },
          {
            "ruleId": "942200",
            "state": "Disabled"
          },
          {
            "ruleId": "942210",
            "state": "Disabled"
          },
          {
            "ruleId": "942260",
            "state": "Disabled"
          },
          {
            "ruleId": "942300",
            "state": "Disabled"
          },
          {
            "ruleId": "942310",
            "state": "Disabled"
          },
          {
            "ruleId": "942330",
            "state": "Disabled"
          },
          {
            "ruleId": "942340",
            "state": "Disabled"
          },
          {
            "ruleId": "942360",
            "state": "Disabled"
          },
          {
            "ruleId": "942370",
            "state": "Disabled"
          },
          {
            "ruleId": "942380",
            "state": "Disabled"
          },
          {
            "ruleId": "942390",
            "state": "Disabled"
          },
          {
            "ruleId": "942400",
            "state": "Disabled"
          },
          {
            "ruleId": "942430",
            "state": "Disabled"
          },
          {
            "ruleId": "942440",
            "state": "Disabled"
          },
          {
            "ruleId": "942240",
            "state": "Disabled"
          },
          {
            "ruleId": "942410",
            "state": "Disabled"
          },
          {
            "ruleId": "942100",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-941-APPLICATION-ATTACK-XSS",
        "rules": [
          {
            "ruleId": "941100",
            "state": "Disabled"
          },
          {
            "ruleId": "941130",
            "state": "Disabled"
          },
          {
            "ruleId": "941160",
            "state": "Disabled"
          },
          {
            "ruleId": "941200",
            "state": "Disabled"
          },
          {
            "ruleId": "941310",
            "state": "Disabled"
          },
          {
            "ruleId": "941320",
            "state": "Disabled"
          },
          {
            "ruleId": "941330",
            "state": "Disabled"
          },
          {
            "ruleId": "941340",
            "state": "Disabled"
          },
          {
            "ruleId": "941350",
            "state": "Disabled"
          },
          {
            "ruleId": "941150",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION",
        "rules": [
          {
            "ruleId": "943110",
            "state": "Disabled"
          },
          {
            "ruleId": "943120",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "General",
        "rules": [
          {
            "ruleId": "200004",
            "state": "Disabled"
          }
        ]
      },
      {
        "ruleGroupName": "REQUEST-933-APPLICATION-ATTACK-PHP",
        "rules": [
          {
            "ruleId": "933100",
            "state": "Disabled"
          },
          {
            "ruleId": "933160",
            "state": "Disabled"
          }
        ]
      }
    ]
  },
  "resources": [
    {
      "condition": "[equals(parameters('Stage').StorageSync,1)]",
      "name": "[concat(variables('Deployment'),'-wafPolicy',variables('WAFPolicyInfo')[copyIndex(0)].name)]",
      "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
      "apiVersion": "2020-04-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "WAFLoop",
        "count": "[length( variables('WAFPolicyInfo') )]"
      },
      "properties": {
        "customRules": "[if(contains(variables('WAFPolicyInfo')[copyIndex(0)],'customRules'),variables('WAFPolicyInfo')[copyIndex(0)].customRules,json('null'))]",
        "policySettings": {
          "fileUploadLimitInMb": 100,
          "maxRequestBodySizeInKb": 128,
          "mode": "[variables('WAFPolicyInfo')[copyIndex(0)].mode]",
          "requestBodyCheck": true,
          "state": "[variables('WAFPolicyInfo')[copyIndex(0)].state]"
        },
        "managedRules": {
          "exclusions": "[if(contains(variables('WAFPolicyInfo')[copyIndex(0)],'exclusions'),variables('WAFPolicyInfo')[copyIndex(0)].exclusions,json('null'))]",
          "managedRuleSets": [
            {
              "ruleSetType": "OWASP",
              "ruleSetVersion": "[variables('WAFPolicyInfo')[copyIndex(0)].ruleSetVersion]",
              "ruleGroupOverrides": "[if(contains(variables('WAFPolicyInfo')[copyIndex(0)],'ruleGroupOverrides'),variables('WAFPolicyInfo')[copyIndex(0)].ruleGroupOverrides,variables('ruleGroupOverrides'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    // "DNS": {
    //   "type": "object",
    //   "value": {
    //     "fe": "[reference(resourceId('Microsoft.network/publicipaddresses',concat(variables('Deployment'),'-publicipWAFfe')),'2017-08-01','Full').properties.dnssettings.fqdn]",
    //     "MYORDERS": "[reference(resourceId('Microsoft.network/publicipaddresses',concat(variables('Deployment'),'-publicipWAFMYORDERS')),'2017-08-01','Full').properties.dnssettings.fqdn]",
    //     "XML": "[reference(resourceId('Microsoft.network/publicipaddresses',concat(variables('Deployment'),'-publicipWAFXML')),'2017-08-01','Full').properties.dnssettings.fqdn]"
    //   }
    // }
  }
}