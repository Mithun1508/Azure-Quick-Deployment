{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "T",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    // "_artifactsLocation": {
    //   "type": "string",
    //   "metadata": {
    //     "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
    //   }
    // },
    // "_artifactsLocationSasToken": {
    //   "type": "securestring",
    //   "metadata": {
    //     "description": "Auto-generated token to access artifactsLocation"
    //   }
    // },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    // Global  AZE2-ADF-S1
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    // subscriptionId
    "subscriptionId": "[subscription().subscriptionId]",
    // rgName
    //"resourceGroupName": "[resourceGroup().name]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat(Variables('Deployment'),'-vn'))]",
    "snWAF01Name": "snWAF01",
    "SubnetRefGW": "[concat(variables('VNetID'), '/subnets/', variables('snWAF01Name'))]",
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
    "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",
    // "WAFInfo": "[parameters('DeploymentInfo').WAFInfo]",
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "appConfigurationInfo": "[parameters('DeploymentInfo').appConfigurationInfo]",
    "hubRG": "[parameters('Global').hubRGName]"
    

  },
  "resources": [
    {
      "name": "[concat(variables('Deployment'),'-ac',variables('appConfigurationInfo').Name)]",
      "type": "Microsoft.AppConfiguration/configurationStores",
      "apiVersion": "2020-06-01",
      "location": "centralus",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet'))]": {
          }
        }
      },
      "sku": {
        "name": "[variables('appConfigurationInfo').sku]"
      },
      "properties": {
        "publicNetworkAccess": "[variables('appConfigurationInfo').publicNetworkAccess]",
        "encryption": {

          //  This is for customer managed keys for encryption
          // "keyVaultProperties": {
          //   "keyIdentifier": "",
          //   "identityClientId": "[reference(resourceid('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGetApp')),'2018-11-30').clientId]"
          // }
        }
      }
    },
    {
      // Call the nested deployment for the Private Link
      "condition": "[contains(variables('appConfigurationInfo'),'privatelinkinfo')]",
      "name": "[concat('dp', variables('Deployment'), '-privatelinkloopSA', variables('appConfigurationInfo').name)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-01-01",
      "dependsOn":[
        "[concat(variables('Deployment'),'-ac',variables('appConfigurationInfo').Name)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          // "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/vNetPrivateLink.json', parameters('global')._artifactsLocationSasToken)]",
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/vNetPrivateLink.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "PrivateLinkInfo": {
            "value": "[variables('appConfigurationInfo').privateLinkInfo]"
          },
          "providerType": {
            "value": "Microsoft.AppConfiguration/configurationStores"
          },
          "resourceName": {
            "value": "[concat(variables('Deployment'),'-ac',variables('appConfigurationInfo').Name)]"
          }
        }
      }
    },
    {
      // Call the nested deployment for the Private Link DNS registration
      "condition": "[contains(variables('appConfigurationInfo'),'privatelinkinfo')]",
      "name": "[concat('dp', variables('Deployment'), '-registerPrivateDNS', variables('appConfigurationInfo').name)]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('hubRG')]",
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "[concat('dp', variables('Deployment'), '-privatelinkloopSA', variables('appConfigurationInfo').name)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          // "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/registerPrivateLinkDNS.json', parameters('global')._artifactsLocationSasToken)]",
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/registerPrivateLinkDNS.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "PrivateLinkInfo": {
            "value": "[variables('appConfigurationInfo').privateLinkInfo]"
          },
          "providerURL": {
            "value": ".io/"
          },
          "resourceName": {
            "value": "[concat(variables('Deployment'),'-ac',variables('appConfigurationInfo').Name)]"
          },
          "Nics": {
            "value": "[if(contains(variables('appConfigurationInfo'),'privatelinkinfo'),reference(resourceId('Microsoft.Resources/deployments',concat('dp', variables('Deployment'), '-privatelinkloopSA', variables('appConfigurationInfo').name)),'2018-05-01').outputs.NICID.value,'')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}