{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    // Global  BRWDev101
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    // subscriptionId
    "subscriptionId": "[subscription().subscriptionId]",
    "Domain": "[split(parameters('Global').DomainName,'.')[0]]",
    // rgName
    "resourceGroupName": "[resourceGroup().name]",
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "VNetID": "[resourceId(variables('subscriptionId'),variables('ResourceGroupName'), 'Microsoft.Network/VirtualNetworks', concat(Variables('Deployment'),'-vn'))]",
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
    "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",
    "LBInfo": "[if(contains(parameters('DeploymentInfo'),'LBInfo'),parameters('DeploymentInfo').LBInfo,createArray())]",
    "copy": [
      {
        "name": "LB",
        "count": "[length(variables('LBInfo'))]",
        "input": {
          "match": "[or(
                        equals(parameters('Global').CN,'.'),
                        contains(parameters('Global').CN,parameters('DeploymentInfo').LBInfo[copyIndex('LB')].Name)
                        )]"
        }
      }
    ]

  },
  "resources": [
    {
      "condition": "[variables('LB')[copyIndex(0)].match]",
      "name": "[concat('dp', variables('Deployment'), '-publicIPDeploy', variables('LBInfo')[copyIndex(0)].Name)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-01-01",
      "dependsOn": [],
      "copy": {
        "name": "publicIPLoop",
        "count": "[length( variables('LBInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/PublicIP.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DeploymentID": {
            "value": "[parameters('DeploymentID')]"
          },
          "NICs": {
            "value": "[variables('LBInfo')[copyIndex(0)].FrontEnd]"
          },
          "vm": {
            "value": "[variables('LBInfo')[copyIndex(0)]]"
          },
          "Global": {
            "value": "[parameters('Global')]"
          },
          "OMSworkspaceID": {
            "value": "[variables('OMSworkspaceID')]"
          }
        }
      }
    },
    {
      "condition": "[variables('LB')[copyIndex(0)].match]",
      "name": "[concat('dp', variables('Deployment'), '-LBDeploy', variables('LBInfo')[copyIndex(0)].Name)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-01-01",
      "dependsOn": [
        "[concat('dp', variables('Deployment'), '-publicIPDeploy', variables('LBInfo')[copyIndex(0)].Name)]"
      ],
      "copy": {
        "name": "LBLoop",
        "count": "[length( variables('LBInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/loadBalancer.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DeploymentID": {
            "value": "[parameters('DeploymentID')]"
          },
          "backEndPools": {
            "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'BackEnd'),variables('LBInfo')[copyIndex(0)].BackEnd,json('[]') )]"
          },
          "NATRules": {
            "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'NATRules'),variables('LBInfo')[copyIndex(0)].NATRules,json('[]') )]"
          },
          "NATPools": {
            "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'NATPools'),variables('LBInfo')[copyIndex(0)].NATPools,json('[]') )]"
          },
          "outboundRules": {
            "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'outboundRules'),variables('LBInfo')[copyIndex(0)].outboundRules,json('[]') )]"
          },
          "Services": {
            "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'Services'),variables('LBInfo')[copyIndex(0)].Services,json('[]') )]"
          },
          "probes": {
            "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'probes'),variables('LBInfo')[copyIndex(0)].probes,json('[]') )]"
          },
          "LB": {
            "value": "[variables('LBInfo')[copyIndex(0)]]"
          },
          "Global": {
            "value": "[parameters('Global')]"
          },
          "OMSworkspaceID": {
            "value": "[variables('OMSworkspaceID')]"
          }
        }
      }
    }
    // {
    //   "condition": "[and(variables('LB')[copyIndex(0)].match,contains(variables('LBInfo')[copyIndex(0)],'NATPools'))]",
    //   "name": "[concat('dp', variables('Deployment'), '-LBDeploySS', variables('LBInfo')[copyIndex(0)].Name)]",
    //   "type": "Microsoft.Resources/deployments",
    //   "apiVersion": "2021-01-01",
    //   "dependsOn": [
    //     "[concat('dp', variables('Deployment'), '-publicIPDeploy', variables('LBInfo')[copyIndex(0)].Name)]"
    //   ],
    //   "copy": {
    //     "name": "LBLoop",
    //     "count": "[length( variables('LBInfo') )]"
    //   },
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/loadBalancerSS.json', parameters('global')._artifactsLocationSasToken)]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "Deployment": {
    //         "value": "[variables('Deployment')]"
    //       },
    //       "DeploymentID": {
    //         "value": "[parameters('DeploymentID')]"
    //       },
    //       "NATPools": {
    //         "value": "[if(contains(variables('LBInfo')[copyIndex(0)],'NATPools'),variables('LBInfo')[copyIndex(0)].NATPools,json('[]') )]"
    //       },
    //       "LB": {
    //         "value": "[variables('LBInfo')[copyIndex(0)]]"
    //       },
    //       "Global": {
    //         "value": "[parameters('Global')]"
    //       },
    //       "OMSworkspaceID": {
    //         "value": "[variables('OMSworkspaceID')]"
    //       }
    //     }
    //   }
    // }
  ],
  "outputs": {}
}