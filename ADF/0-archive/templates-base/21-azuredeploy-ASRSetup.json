{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    "Deployment": "[toLower(concat(parameters('Prefix'),parameters('Global').OrgName,parameters('Global').Appname,parameters('Environment'),parameters('DeploymentID')))]",
    "dataRetention": 31,
    "serviceTier": "pernode",

    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "AAName": "[replace(concat(variables('Deployment'),'OMSAutomation'),'-','')]",
    "AppInsightsName": "[replace(concat(variables('Deployment'),'AppInsights'),'-','')]",
    "SADiagName": "[concat(variables('Deployment'),'sadiag')]",

    "regionLookup": {
      "AZE2": "eastus2",
      "AZC1": "centralus",
      "AEU2": "eastus2",
      "ACU1": "centralus"
    },

    "copy": [
      {
        "name": "Vault",
        "count": "[length(variables('ASRInfo'))]",
        "input": {
          "name": "[concat(variables('ASRInfo')[copyIndex('Vault')].DestinationRegion,parameters('Global').Appname,variables('ASRInfo')[copyIndex('Vault')].DestinationRG,variables('ASRInfo')[copyIndex('Vault')].DestinationRSVName)]",
          "SourceRG": "[concat(variables('ASRInfo')[copyIndex('Vault')].SourceRegion,'-',parameters('Global').AppName,'-RG-', variables('ASRInfo')[copyIndex('Vault')].SourceRG)]",
          "SourceVNet": "[concat(variables('ASRInfo')[copyIndex('Vault')].SourceRegion,'-',parameters('Global').Appname,'-',variables('ASRInfo')[copyIndex('Vault')].SourceRG,'-vn')]",
          "DestinationRG": "[concat(variables('ASRInfo')[copyIndex('Vault')].DestinationRegion,'-',parameters('Global').AppName,'-RG-', variables('ASRInfo')[copyIndex('Vault')].DestinationRG)]",
          "DestinationVNet": "[concat(variables('ASRInfo')[copyIndex('Vault')].DestinationRegion,'-',parameters('Global').Appname,'-',variables('ASRInfo')[copyIndex('Vault')].DestinationRG,'-vn')]",
          "SourcesaName": "[tolower(concat(variables('ASRInfo')[copyIndex('Vault')].SourceRegion,parameters('Global').Appname,variables('ASRInfo')[copyIndex('Vault')].SourceRG,'sa',variables('ASRInfo')[copyIndex('Vault')].SourceSasuffix))]",
          "DestinationLogAnalytics": "[concat(variables('ASRInfo')[copyIndex('Vault')].DestinationRegion,parameters('Global').Appname,variables('ASRInfo')[copyIndex('Vault')].DestinationRG,variables('ASRInfo')[copyIndex('Vault')].DestinationLogAnalytics)]",
          "FabricSource": "[concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].SourceRegion])]",
          "FabricDestination": "[concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].DestinationRegion])]",
          "ContainerSource": "[concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].SourceRegion],'-container')]",
          "ContainerDestination": "[concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].DestinationRegion],'-container')]",
          "MappingSource": "[concat(variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].SourceRegion],'-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].DestinationRegion],'-',variables('ASRInfo')[copyIndex('Vault')].ReplicationPolicyName)]",
          "MappingDestination": "[concat(variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].DestinationRegion],'-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].SourceRegion],'-',variables('ASRInfo')[copyIndex('Vault')].ReplicationPolicyName)]",
          "NetworkMappingSource": "[concat(variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].SourceRegion],'-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].DestinationRegion],'-NetworkMap')]",
          "NetworkMappingDestination": "[concat(variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].DestinationRegion],'-',variables('regionLookup')[variables('ASRInfo')[copyIndex('Vault')].SourceRegion],'-NetworkMap')]"

        }
      }
    ],

    //     {
    //         "name": "AZE2ADFS2ASRRecoveryVault",
    //         "SourceRG": "AZC1-ADF-RG-S1",
    //         "SourceVNet": "AZC1-ADF-S1-vn",
    //         "DestinationRG": "AZE2-ADF-RG-S2",
    //         "DestinationVNet": "AZE2-ADF-S2-vn",
    //         "SourcesaName": "azc1adfs1sacache",
    //         "DestinationLogAnalytics": "AZE2S2ADFASRLogAnalytics",
    //         "FabricSource": "asr-a2a-default-centralus",
    //         "FabricDestination": "asr-a2a-default-eastus2",
    //         "ContainerSource": "asr-a2a-default-centralus-container",
    //         "ContainerDestination": "asr-a2a-default-eastus2-container",
    //         "MappingSource": "centralus-eastus2-24-hour-retention-policy",
    //         "MappingDestination": "eastus2-centralus-24-hour-retention-policy",
    //         "NetworkMappingSource": "centralus-eastus2-NetworkMap",
    //         "NetworkMappingDestination": "eastus2-centralus-NetworkMap"
    //     }

    "ASRInfo": "[parameters('DeploymentInfo').ASRInfo]",

    "condition": true

  },
  "resources": [
    {
      "name": "SourceStorageASR",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('Vault')[copyIndex(0)].SourceRG]",
      "dependsOn": [
      ],
      "copy": {
        "name": "sourceCopy",
        "count": "[length(variables('ASRInfo'))]"
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
          },
          "outputs": {
          },
          "variables": {
          },
          "resources": [
            {
              "condition": "[variables('condition')]",
              "name": "[variables('Vault')[copyIndex(0)].SourcesaName]",
              "type": "Microsoft.Storage/storageAccounts",
              "location": "[variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].SourceRegion]]",
              "apiVersion": "2018-07-01",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              },
              "dependsOn": [
              ],
              "kind": "StorageV2",
              "properties": {
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [
                  ],
                  "ipRules": [
                  ],
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                //"azureFilesAadIntegration": true,
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[variables('condition')]",
      "name": "[variables('Vault')[copyIndex(0)].DestinationRG]",
      "location": "[variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].DestinationRegion]]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "copy": {
        "name": "rgCopy",
        "count": "[length(variables('ASRInfo'))]"
      },
      "properties": {
      }
    },
    {
      "name": "DestinationRSVASR",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('Vault')[copyIndex(0)].DestinationRG]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups', variables('Vault')[copyIndex(0)].DestinationRG)]"
      ],
      "copy": {
        "name": "destinationLoop",
        "count": "[length(variables('ASRInfo'))]"
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
          },
          "outputs": {
          },
          "variables": {
          },
          "resources": [
            // {
            //   "condition": "[variables('condition')]",
            //   "apiVersion": "2017-04-26-preview",
            //   "type": "Microsoft.OperationalInsights/workspaces",
            //   "name": "[variables('Vault')[copyIndex(0)].DestinationLogAnalytics]",
            //   "location": "[variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].DestinationRegion]]",
            //   "dependsOn": [
            //   ],
            //   "properties": {
            //     "sku": {
            //       "Name": "[variables('serviceTier')]"
            //     },
            //     "retention": "[variables('dataRetention')]",
            //     "features": {
            //       "legacy": 0,
            //       "searchVersion": 1
            //     }
            //   },
            //   "resources": [

            //   ]
            // },
            {
              // "condition": "[equals(parameters('Stage').RSV,1)]",
              "apiVersion": "2018-01-10",
              "location": "[variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].DestinationRegion]]",
              "name": "[variables('Vault')[CopyIndex(0)].name]",
              "type": "Microsoft.RecoveryServices/vaults",
              "sku": {
                "name": "[variables('ASRInfo')[copyIndex(0)].RSVSkuName]",
                "tier": "[variables('ASRInfo')[copyIndex(0)].RSVSkuTier]"
              },
              "dependsOn": [
                // "[variables('Vault')[copyIndex(0)].DestinationLogAnalytics]"
              ],
              "properties": {
                // "StorageModelType": "[variables('ASRInfo')[copyIndex(0)].RSVStorageType]"
              },
              "resources": [
                {
                  "condition": "[equals(parameters('Stage').RSV,1)]",
                  "type": "providers/diagnosticSettings",
                  "name": "Microsoft.Insights/service",
                  "dependsOn": [
                    "[variables('Vault')[CopyIndex(0)].name]"
                  ],
                  "apiVersion": "2017-05-01-preview",
                  "properties": {
                    "name": "service",
                    "workspaceId": "[variables('OMSworkspaceID')]",
                    "logs": [
                      {
                        "category": "AzureBackupReport",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryJobs",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryEvents",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryReplicatedItems",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryReplicationStats",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryRecoveryPoints",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryReplicationDataUploadRate",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      },
                      {
                        "category": "AzureSiteRecoveryProtectedDiskDataChurn",
                        "enabled": true,
                        "retentionPolicy": {
                          "days": 0,
                          "enabled": false
                        }
                      }
                    ]
                  }
                },
                {
                  // Source Fabric
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics",
                  "apiVersion": "2018-07-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricSource)]",
                  "dependsOn": [
                    "[variables('Vault')[CopyIndex(0)].name]"
                  ],
                  "properties": {
                    "customDetails": {
                      "instanceType": "Azure",
                      "location": "[variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].SourceRegion]]"
                    }
                  }
                },
                {
                  // Destination Fabric
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics",
                  "apiVersion": "2018-07-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricDestination)]",
                  "dependsOn": [
                    "[variables('Vault')[CopyIndex(0)].name]"
                  ],
                  "properties": {
                    "customDetails": {
                      "instanceType": "Azure",
                      "location": "[variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].DestinationRegion]]"
                    }
                  }
                },
                {
                  // Source Container
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers",
                  "apiVersion": "2018-07-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricSource,'/',variables('Vault')[CopyIndex(0)].ContainerSource)]",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricSource)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults',                   variables('Vault')[CopyIndex(0)].name)]"
                  ],
                  "properties": {
                  }
                },
                {
                  // Destination Container
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers",
                  "apiVersion": "2018-07-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricDestination,'/',variables('Vault')[CopyIndex(0)].ContainerDestination)]",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricDestination)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults',                   variables('Vault')[CopyIndex(0)].name)]"
                  ],
                  "properties": {
                  }
                },
                {
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationPolicies",
                  "apiVersion": "2018-07-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('ASRInfo')[copyIndex(0)].ReplicationPolicyName)]",
                  "dependsOn": [
                    "[variables('Vault')[CopyIndex(0)].name]"
                  ],
                  "properties": {
                    // "friendlyName": "[variables('ASRInfo')[copyIndex(0)].ReplicationPolicyName]",
                    "providerSpecificInput": {
                      "instanceType": "A2A",
                      "recoveryPointHistory": 1440,
                      "appConsistentFrequencyInMinutes": 240,
                      // "recoveryPointThresholdInMinutes": 0,
                      // "multiVmSyncStatus": "Enabled",
                      "crashConsistentFrequencyInMinutes": 5
                    }
                  }
                },
                {
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
                  "apiVersion": "2018-01-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricSource,'/',variables('Vault')[CopyIndex(0)].ContainerSource,'/',variables('Vault')[CopyIndex(0)].MappingSource)]",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults',variables('Vault')[CopyIndex(0)].name)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationPolicies',variables('Vault')[CopyIndex(0)].name,variables('ASRInfo')[copyIndex(0)].ReplicationPolicyName)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricSource)]",
                    "[resourceId('Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',variables('Vault')[CopyIndex(0)].name, variables('Vault')[CopyIndex(0)].FabricSource, variables('Vault')[CopyIndex(0)].ContainerSource)]",
                    "[resourceId('Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',variables('Vault')[CopyIndex(0)].name, variables('Vault')[CopyIndex(0)].FabricDestination, variables('Vault')[CopyIndex(0)].ContainerDestination)]"
                  ],
                  "properties": {
                    "targetProtectionContainerId": "[resourceId('Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricDestination,variables('Vault')[CopyIndex(0)].ContainerDestination)]",
                    "policyId": "[resourceid('Microsoft.RecoveryServices/vaults/replicationPolicies',variables('Vault')[CopyIndex(0)].name,variables('ASRInfo')[copyIndex(0)].ReplicationPolicyName)]",
                    "providerSpecificInput": {
                      "instanceType": "A2A",
                      "agentAutoUpdateStatus": "Disabled"
                    }
                  }
                },
                {
                  "condition": "[variables('condition')]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
                  "apiVersion": "2018-01-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricDestination,'/',variables('Vault')[CopyIndex(0)].ContainerDestination,'/',variables('Vault')[CopyIndex(0)].MappingDestination)]",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults',variables('Vault')[CopyIndex(0)].name)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationPolicies',variables('Vault')[CopyIndex(0)].name,variables('ASRInfo')[copyIndex(0)].ReplicationPolicyName)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricDestination)]",
                    "[resourceId('Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',variables('Vault')[CopyIndex(0)].name, variables('Vault')[CopyIndex(0)].FabricSource, variables('Vault')[CopyIndex(0)].ContainerSource)]",
                    "[resourceId('Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers',variables('Vault')[CopyIndex(0)].name, variables('Vault')[CopyIndex(0)].FabricDestination, variables('Vault')[CopyIndex(0)].ContainerDestination)]"
                  ],
                  "properties": {
                    "targetProtectionContainerId": "[resourceId('Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers', variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricSource,variables('Vault')[CopyIndex(0)].ContainerSource)]",
                    "policyId": "[resourceid('Microsoft.RecoveryServices/vaults/replicationPolicies',variables('Vault')[CopyIndex(0)].name,variables('ASRInfo')[copyIndex(0)].ReplicationPolicyName)]",
                    "providerSpecificInput": {
                      "instanceType": "A2A",
                      "agentAutoUpdateStatus": "Disabled"
                    }
                  }
                },
                {
                  "condition": "[variables('condition')]",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricSource,'/azureNetwork/',variables('Vault')[CopyIndex(0)].NetworkMappingSource)]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings",
                  "apiVersion": "2018-07-10",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults',variables('Vault')[CopyIndex(0)].name)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricSource)]"
                  ],
                  "properties": {
                    "recoveryFabricName": "[variables('Vault')[CopyIndex(0)].FabricDestination]",
                    "recoveryNetworkId": "[concat(subscription().Id,'/resourceGroups/',variables('Vault')[CopyIndex(0)].DestinationRG,'/providers/Microsoft.Network/virtualnetworks/',variables('Vault')[CopyIndex(0)].DestinationVNet)]",
                    // "recoveryNetworkId": "/subscriptions/b8f402aa-20f7-4888-b45c-3cf086dad9c3/resourcegroups/aze2-adf-rg-s2/providers/microsoft.network/virtualnetworks/aze2-adf-s2-vn",
                    "fabricSpecificDetails": {
                      "instanceType": "AzureToAzure",
                      // "primaryNetworkId":"/subscriptions/b8f402aa-20f7-4888-b45c-3cf086dad9c3/resourcegroups/azc1-adf-rg-s1/providers/microsoft.network/virtualnetworks/azc1-adf-s1-vn"
                      "primaryNetworkId": "[concat(subscription().Id,'/resourceGroups/',variables('Vault')[CopyIndex(0)].SourceRG,'/providers/Microsoft.Network/virtualnetworks/',variables('Vault')[CopyIndex(0)].SourceVNet)]"
                    }
                  }
                },
                {
                  "condition": "[variables('condition')]",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('Vault')[CopyIndex(0)].FabricDestination,'/azureNetwork/',variables('Vault')[CopyIndex(0)].NetworkMappingDestination)]",
                  "type": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings",
                  "apiVersion": "2018-07-10",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults',variables('Vault')[CopyIndex(0)].name)]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,variables('Vault')[CopyIndex(0)].FabricDestination)]"
                  ],
                  "properties": {
                    "recoveryFabricName": "[variables('Vault')[CopyIndex(0)].FabricSource]",
                    "recoveryNetworkId": "[concat(subscription().Id,'/resourceGroups/',variables('Vault')[CopyIndex(0)].SourceRG,'/providers/Microsoft.Network/virtualnetworks/',variables('Vault')[CopyIndex(0)].SourceVNet)]",
                    // "recoveryNetworkId": "/subscriptions/b8f402aa-20f7-4888-b45c-3cf086dad9c3/resourcegroups/aze2-adf-rg-s2/providers/microsoft.network/virtualnetworks/aze2-adf-s2-vn",
                    "fabricSpecificDetails": {
                      "instanceType": "AzureToAzure",
                      // "primaryNetworkId":"/subscriptions/b8f402aa-20f7-4888-b45c-3cf086dad9c3/resourcegroups/azc1-adf-rg-s1/providers/microsoft.network/virtualnetworks/azc1-adf-s1-vn"
                      "primaryNetworkId": "[concat(subscription().Id,'/resourceGroups/',variables('Vault')[CopyIndex(0)].DestinationRG,'/providers/Microsoft.Network/virtualnetworks/',variables('Vault')[CopyIndex(0)].DestinationVNet)]"
                    }
                  }
                },
                // Create after replicated items have been added.
                // Will likley move to a second template.
                //  
                {
                  "condition": false,
                  "type": "Microsoft.RecoveryServices/vaults/replicationRecoveryPlans",
                  "apiVersion": "2018-07-10",
                  "name": "[concat(variables('Vault')[CopyIndex(0)].name,'/',variables('ASRInfo')[copyIndex(0)].RecoveryPlanName)]",
                  "dependsOn": [
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].SourceRegion]))]",
                    "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].DestinationRegion]))]",
                    "[resourceid('Microsoft.RecoveryServices/vaults',                   variables('Vault')[CopyIndex(0)].name)]"
                  ],
                  "properties": {
                    "primaryFabricId": "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].SourceRegion]))]",
                    "recoveryFabricId": "[resourceid('Microsoft.RecoveryServices/vaults/replicationFabrics',variables('Vault')[CopyIndex(0)].name,concat('asr-a2a-default-',variables('regionLookup')[variables('ASRInfo')[copyIndex(0)].DestinationRegion]))]",
                    "failoverDeploymentModel": "ResourceManager",
                    "groups": [

                    ]
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "Vault": {
      "type": "array",
      "value": "[variables('Vault')]"
    }
  }
}