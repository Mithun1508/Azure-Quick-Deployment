{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "devOpsPat": {
      "type": "securestring"
    },
    "sshPublic": {
      "type": "securestring"
    }
  },
  "variables": {
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",

    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",

    "cosmosDBInfo": "[if(contains(parameters('DeploymentInfo'),'cosmosDBInfo'),parameters('DeploymentInfo').cosmosDBInfo,createArray())]",
    "copy": [
      {
        "name": "cosmosDB",
        "count": "[length(variables('cosmosDBInfo'))]",
        "input": {
          "match": "[or(
                        equals(parameters('Global').CN,'.'),
                        contains(parameters('Global').CN,parameters('DeploymentInfo').cosmosDBInfo[copyIndex('cosmosDB')].Name)
                        )]"
        }
      }
    ]
  },
  "resources": [
    {
      "condition": "[variables('cosmosDB')[copyIndex(0)].match]",
      "name": "[concat('dp', variables('Deployment'), '-cosmosDBDeploy',if(equals(length(variables('cosmosDB')),0),'',variables('cosmosDBInfo')[copyIndex()].name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-01-01",
      "dependsOn": [
      ],
      "copy": {
        "name": "cosmosDBLoop",
        "count": "[length( variables('cosmosDB') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/cosmosDB.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DeploymentID": {
            "value": "[parameters('DeploymentID')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "cosmosDBInfo": {
            "value": "[variables('cosmosDBInfo')[copyIndex(0)]]"
          },
          "Global": {
            "value": "[parameters('Global')]"
          },
          "Stage": {
            "value": "[parameters('Stage')]"
          },
          "OMSworkspaceID": {
            "value": "[variables('OMSworkspaceID')]"
          }
        }
      }
    },
        {
      // Call the nested deployment for the Private Link
      "condition": "[contains(variables('cosmosDBInfo')[copyIndex(0)],'privatelinkinfo')]",
      "name": "[concat('dp', variables('Deployment'), '-privatelinkloopCosmos', variables('cosmosDBInfo')[copyIndex(0)].name)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-01-01",
      "dependsOn": [
        "cosmosDBLoop"
      ],
      "copy": {
        "name": "plLoop",
        "count": "[length( variables('cosmosDBInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/vNetPrivateLink.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "PrivateLinkInfo": {
            "value": "[variables('cosmosDBInfo')[copyIndex(0)].privateLinkInfo]"
          },
          "providerType": {
            "value": "Microsoft.DocumentDb/databaseAccounts"
          },
          "resourceName": {
            "value": "[tolower(concat(variables('Deployment'),'-cosmos-',variables('cosmosDBInfo')[copyIndex()].Name))]"
          }
        }
      }
    },
    {
      // REGISTER DNS IN Primary
      // Call the nested deployment for the Private Link DNS registration
      "condition": "[contains(variables('cosmosDBInfo')[copyIndex(0)],'privatelinkinfo')]",
      "name": "[concat('dp', variables('Deployment'), '-registerPrivateLinkDNS-ACU1-', variables('cosmosDBInfo')[copyIndex(0)].name)]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('Global').HubRGName]",
      "apiVersion": "2019-10-01",
      "dependsOn": [
        "plLoop"
      ],
      "copy": {
        "name": "plDNSLoopACU1",
        "count": "[length( variables('cosmosDBInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/registerPrivateLinkDNS.json', parameters('global')._artifactsLocationSasToken)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "PrivateLinkInfo": {
            "value": "[variables('cosmosDBInfo')[copyIndex(0)].privateLinkInfo]"
          },
          "resourceName": {
            "value": "[concat(variables('Deployment'),'-cosmos-',variables('cosmosDBInfo')[copyIndex()].Name)]"
          },
          "providerURL": {
            "value": ".azure.com/"
          },
          "Nics": {
            "value": "[if(contains(variables('cosmosDBInfo')[copyIndex(0)],'privatelinkinfo'),reference(resourceId('Microsoft.Resources/deployments',concat('dp', variables('Deployment'), '-privatelinkloopCosmos', variables('cosmosDBInfo')[copyIndex(0)].name)),'2018-05-01').outputs.NICID.value,'')]"
          }
        }
      }
    }
    // {
    //   // REGISTER DNS IN Secondary
    //   // Call the nested deployment for the Private Link DNS registration
    //   "condition": "[contains(variables('cosmosDBInfo')[copyIndex(0)],'privatelinkinfo')]",
    //   "name": "[concat('dp', variables('Deployment'), '-registerPrivateDNS-AEU2-', variables('cosmosDBInfo')[copyIndex(0)].name)]",
    //   "type": "Microsoft.Resources/deployments",
    //   "resourceGroup": "[parameters('Global').HubRGNameDR]",
    //   "apiVersion": "2019-10-01",
    //   "dependsOn": [
    //     "plLoop"
    //   ],
    //   "copy": {
    //     "name": "plDNSLoopAEU@",
    //     "count": "[length( variables('cosmosDBInfo') )]"
    //   },
    //   "properties": {
    //     "mode": "Incremental",
    //     "templateLink": {
    //       "uri": "[concat(parameters('global')._artifactsLocation, '/', 'templates-nested/registerPrivateLinkDNS.json', parameters('global')._artifactsLocationSasToken)]",
    //       "contentVersion": "1.0.0.0"
    //     },
    //     "parameters": {
    //       "PrivateLinkInfo": {
    //         "value": "[variables('cosmosDBInfo')[copyIndex(0)].privateLinkInfo]"
    //       },
    //       "providerURL": {
    //         "value": ".azure.com/"
    //       },
    //       "resourceName": {
    //         "value": "[concat(variables('Deployment'),'-cosmos-',variables('cosmosDBInfo')[copyIndex()].Name)]"
    //       },
    //       "Nics": {
    //         "value": "[if(contains(variables('cosmosDBInfo')[copyIndex(0)],'privatelinkinfo'),reference(resourceId('Microsoft.Resources/deployments',concat('dp', variables('Deployment'), '-privatelinkloopCosmos', variables('cosmosDBInfo')[copyIndex(0)].name)),'2018-05-01').outputs.NICID.value,'')]"
    //       }
    //     }
    //   }
    // }
  ],
  "outputs": {
  }
}